#!/usr/bin/env bash

GLOBAL_GITIGNORE_PATH=/home/g/.gitignore
SHELLS_BASE_PATH=/home/g/Projects/dots.nix/shells:/home/g/Avito/shells
HOOKS_PATH=/home/g/.config/lefthook

usage() {
    echo "project <command> <params>"

    echo -e "\tinit <shell>"
    echo -e "\tclean"
    echo -e "\tnix"
    IFS=: read -r -d '' -a path_array < <(printf '%s:\0' "$SHELLS_BASE_PATH")
    for p in "${path_array[@]}"; do
        find $p -name 'flake.*.nix' -printf "\t\t%f\n" | sed 's/flake.//' | sed 's/.nix//' | sort
    done
    echo

    echo -e "\thook"
    IFS=: read -r -d '' -a path_array < <(printf '%s:\0' "$HOOKS_PATH")
    for p in "${path_array[@]}"; do
        find $p -name '*.yml' -printf "\t\t%f\n" | sed 's/.yml//' | sort
    done
    exit 1
}

gitignore() {
      git config --get core.excludesfile | grep -q "$GLOBAL_GITIGNORE_PATH"|| git config --global core.excludesfile "$GLOBAL_GITIGNORE_PATH"

      grep -q $1 $GLOBAL_GITIGNORE_PATH || echo "$1" >> $GLOBAL_GITIGNORE_PATH
}

clean() {
    direnv deny . 2&>/dev/null
    rm .envrc 2&>/dev/null
    rm flake.nix 2&>/dev/null

    lefhtook uninstall 2&>/dev/null
    rm lefhtook.yml 2&>/dev/null
    rm -rf .lefthook
}

shell() {
    IFS=: read -r -d '' -a path_array < <(printf '%s:\0' "$SHELLS_BASE_PATH")
    p=$(find ${path_array[@]} -name $(echo flake.$1.nix))
    [[ "$p" == "" ]] && echo "Unknown shell $1" && usage

	pp=$(dirname "$p")
	f=$(echo $p | sed 's/.*flake\.\(.*\)\.nix/\1/')

    echo echo "use flake ${pp}#${f} --impure"
    echo "use flake ${pp}#${f} --impure" > .envrc

    echo direnv allow .
    direnv allow .

    gitignore flake.nix
    gitignore .envrc
}

hook() {
    IFS=: read -r -d '' -a path_array < <(printf '%s:\0' "$HOOKS_PATH")
    p=$(find ${path_array[@]} -name $(echo $1.yml))
    [[ "$p" == "" ]] && echo "Unknown hook $1" && usage

    echo Installing hooks $p
    cat > lefthook.yml <<EOF
extends:
    - $p
EOF

    echo lefthook install
    lefthook install

    echo ln -s /home/g/.bin/hooks .lefthook
    ln -s /home/g/.bin/hooks .lefthook

    gitignore lefthook.yml
    gitignore .lefthook
}

[ $# -eq 2 ] || usage

case $1 in
    "init")
        clean
        shell $2
        hook general
        ;;

    "nix")
        shell $2
        ;;

    "hook")
        hook $2
        ;;

    "clean")
        clean
        ;;
esac
