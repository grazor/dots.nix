#!/usr/bin/env bash

GLOBAL_GITIGNORE_PATH=${HOME}/.gitignore
SHELLS_BASE_PATH=${HOME}/dots/flake.nix:${HOME}/Avito/shells/flake.nix
HOOKS_PATH=${HOME}/.config/lefthook

#SYSTEM="x86_64-linux"
SYSTEM="aarch64-darwin"

usage() {
	echo "project <command> <params>"

	echo -e "\tinit <shell>"
	echo -e "\tclean"
	echo -e "\tnix"
	IFS=: read -r -d '' -a path_array < <(printf '%s:\0' "$SHELLS_BASE_PATH")
	for p in "${path_array[@]}"; do
		nix flake show "$p" --json 2>/dev/null | jq ".devShells.\"${SYSTEM}\" | keys | .[]" -r | sed 's/^\(.*\)$/\t\t\1/'
	done
	echo

	echo -e "\thook"
	IFS=: read -r -d '' -a path_array < <(printf '%s:\0' "$HOOKS_PATH")
	for p in "${path_array[@]}"; do
		find $p -name '*.yml' -printf "\t\t%f\n" | sed 's/.yml//' | sort
	done
	exit 1
}

gitignore() {
	git config --get core.excludesfile | grep -q "$GLOBAL_GITIGNORE_PATH" || git config --global core.excludesfile "$GLOBAL_GITIGNORE_PATH"

	grep -q $1 $GLOBAL_GITIGNORE_PATH || echo "$1" >>$GLOBAL_GITIGNORE_PATH
}

clean() {
	direnv deny . 2 &>/dev/null
	rm .envrc 2 &>/dev/null

	lefhtook uninstall 2 &>/dev/null
	rm lefhtook.yml 2 &>/dev/null
	rm -rf .lefthook
}

shell() {
	local flake=""

	IFS=: read -r -d '' -a path_array < <(printf '%s:\0' "$SHELLS_BASE_PATH")
	for p in "${path_array[@]}"; do
		if nix flake show "$p" --json 2>/dev/null | jq ".devShells.\"${SYSTEM}\" | keys | .[]" -r | grep -qx $1; then
			flake="$p"
			break
		fi
	done
	[[ "$flake" == "" ]] && echo "Unknown shell $1" && echo && usage

	echo echo "use flake ${flake}#$1 --impure"
	echo "use flake ${flake}#\\\"$1\\\" --impure" >.envrc

	echo direnv allow .
	direnv allow .

	gitignore .direnv
	gitignore .envrc
}

hook() {
	IFS=: read -r -d '' -a path_array < <(printf '%s:\0' "$HOOKS_PATH")
	p=$(find ${path_array[@]} -name $(echo $1.yml))
	[[ "$p" == "" ]] && echo "Unknown hook $1" && usage

	echo Installing hooks $p
	cat >lefthook.yml <<EOF
extends:
    - $p
EOF

	echo lefthook install
	lefthook install

	echo ln -s ${HOME}/.bin/hooks .lefthook
	ln -s ${HOME}/.bin/hooks .lefthook

	gitignore lefthook.yml
	gitignore .lefthook
}

case $1 in
"init")
	[ $# -eq 2 ] || usage
	clean
	shell $2
	hook general
	;;

"nix" | "shell")
	[ $# -eq 2 ] || usage
	shell $2
	;;

"hook")
	[ $# -eq 2 ] || usage
	hook $2
	;;

"clean")
	clean
	;;
esac
